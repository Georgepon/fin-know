# Use an official Python runtime as a parent image
FROM python:3.11-slim

# Set the working directory in the container
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY requirements.txt .

# Install any needed packages specified in requirements.txt
# We use --no-cache-dir to reduce image size
RUN pip install --no-cache-dir -r requirements.txt

# Copy the application code into the container at /app/app
# Assumes your app code is in an 'app' directory relative to the Dockerfile
COPY app/ app/

# Copy any other necessary files or directories (e.g., .env if needed, though handle secrets carefully)
# COPY .env .

# Set environment variables
ENV PYTHONPATH=/app

# Make port 8501 available to the world outside this container (Streamlit default port)
EXPOSE 8501

# Define environment variable to ensure Streamlit runs on external network interface
# ENV SERVER_ADDRESS=0.0.0.0 # Redundant with --server.address flag

# Run streamlit when the container launches
# Use the array form for better signal handling
CMD ["streamlit", "run", "app/frontend.py", "--server.port=8501", "--server.address=0.0.0.0"]